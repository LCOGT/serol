# Generated by Django 2.0.7 on 2018-07-24 10:29

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm


class Migration(migrations.Migration):

    replaces = [('status', '0001_initial'), ('status', '0002_user_token'), ('status', '0003_auto_20170818_1206'), ('status', '0004_progress_userrequestids'), ('status', '0005_auto_20170829_1541'), ('status', '0006_analysis_analysisanswer_useranswer'), ('status', '0007_auto_20170901_1546'), ('status', '0008_auto_20170901_1550'), ('status', '0009_auto_20171113_1549'), ('status', '0010_auto_20171121_1237'), ('status', '0011_proposal'), ('status', '0012_user_default_proposal'), ('status', '0013_auto_20180125_1304'), ('status', '0014_auto_20180125_1432'), ('status', '0015_auto_20180214_1112'), ('status', '0016_auto_20180216_1515'), ('status', '0017_auto_20180216_1542'), ('status', '0018_auto_20180607_1129'), ('status', '0019_auto_20180716_1420')]

    initial = True
    atomic = False

    dependencies = [
        ('explorer', '0004_auto_20170815_1500'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestids', models.CharField(max_length=20)),
                ('status', django_fsm.FSMField(choices=[('New', 'New'), ('Submitted', 'Submitted'), ('Observed', 'Observed'), ('Failed', 'Failed'), ('Retry', 'Retry'), ('Completed', 'Completed'), ('Identify', 'Identify'), ('Analyse', 'Analyse'), ('Identify', 'Identify'), ('Investigate', 'Investigate')], default='New', max_length=50)),
                ('last_update', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('target', models.CharField(max_length=100)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='explorer.Challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('userrequestid', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='progress',
            unique_together={('user', 'challenge')},
        ),
        migrations.AddField(
            model_name='user',
            name='token',
            field=models.CharField(blank=True, help_text='Authentication for Valhalla', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='archive_token',
            field=models.CharField(blank=True, help_text='Authentication for LCO archive', max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='explorer.Challenge')),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='status.Analysis')),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='status.AnalysisAnswer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RenameModel(
            old_name='AnalysisAnswer',
            new_name='Answer',
        ),
        migrations.RenameModel(
            old_name='Analysis',
            new_name='Question',
        ),
        migrations.AlterModelOptions(
            name='progress',
            options={'verbose_name_plural': 'User Progress'},
        ),
        migrations.AlterModelOptions(
            name='question',
            options={'verbose_name_plural': 'questions'},
        ),
        migrations.RenameField(
            model_name='question',
            old_name='question',
            new_name='text',
        ),
        migrations.AlterUniqueTogether(
            name='progress',
            unique_together=set(),
        ),
        migrations.RenameField(
            model_name='answer',
            old_name='answer',
            new_name='text',
        ),
        migrations.AddField(
            model_name='progress',
            name='frameids',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='progress',
            name='requestids',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='progress',
            name='userrequestid',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='progress',
            name='status',
            field=django_fsm.FSMField(choices=[('New', 'New'), ('Submitted', 'Submitted'), ('Observed', 'Observed'), ('Identify', 'Identify'), ('Analyse', 'Analyse'), ('Investigate', 'Investigate'), ('Summary', 'Summary'), ('Failed', 'Failed'), ('Retry', 'Retry')], default='New', max_length=50),
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='default_proposal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='status.Proposal'),
        ),
        migrations.AlterModelOptions(
            name='progress',
            options={'verbose_name_plural': 'Challenge Progress'},
        ),
        migrations.AddField(
            model_name='user',
            name='mission_1',
            field=models.BooleanField(default=False, help_text='Has user competed Mission 1?'),
        ),
        migrations.AddField(
            model_name='user',
            name='mission_2',
            field=models.BooleanField(default=False, help_text='Has user competed Mission 2?'),
        ),
        migrations.AddField(
            model_name='user',
            name='mission_3',
            field=models.BooleanField(default=False, help_text='Has user competed Mission 3?'),
        ),
        migrations.AlterField(
            model_name='progress',
            name='status',
            field=django_fsm.FSMField(choices=[('New', 'New'), ('Submitted', 'Submitted'), ('Observed', 'Observed'), ('Identify', 'Identify'), ('Analyse', 'Analyse'), ('Investigate', 'Investigate'), ('Summary', 'Summary'), ('Failed', 'Failed')], default='New', max_length=50),
        ),
        migrations.RenameField(
            model_name='progress',
            old_name='requestids',
            new_name='requestid',
        ),
        migrations.RemoveField(
            model_name='progress',
            name='userrequestid',
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
    ]
